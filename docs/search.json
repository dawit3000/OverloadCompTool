[{"path":"/articles/catool-walkthrough.html","id":"introduction","dir":"Articles","previous_headings":"","what":"🔍 Introduction","title":"catool: Walkthrough","text":"vignette demonstrates use catool R package calculate overload compensation instructors based institutional course schedules compensation policies. package supports individual instructor analysis full-schedule summaries, applying proration eligibility rules based enrollment credit hours.","code":""},{"path":"/articles/catool-walkthrough.html","id":"load-schedule","dir":"Articles","previous_headings":"","what":"🏫 Load Schedule","title":"catool: Walkthrough","text":"","code":"# Replace with your actual file path or upload method # Example fallback data (for build safety) schedule <- data.frame(   INSTRUCTOR = c(\"Lalau-Hitchcock, Diksha\", \"Lalau-Hitchcock, Diksha\", \"Smith, John\"),   ENRLD = c(12, 7, 4),   HRS = c(3, 3, 3),   stringsAsFactors = FALSE )"},{"path":"/articles/catool-walkthrough.html","id":"get-schedule-for-one-instructor","dir":"Articles","previous_headings":"","what":"👤 Get Schedule for One Instructor","title":"catool: Walkthrough","text":"","code":"get_instructor_schedule(\"Lalau-Hitchcock, Diksha\", schedule) ##                INSTRUCTOR ENRLD HRS ## 1 Lalau-Hitchcock, Diksha    12   3 ## 2 Lalau-Hitchcock, Diksha     7   3"},{"path":"/articles/catool-walkthrough.html","id":"calculate-overload-compensation-for-one-instructor","dir":"Articles","previous_headings":"","what":"💵 Calculate Overload Compensation for One Instructor","title":"catool: Walkthrough","text":"","code":"IS <- get_instructor_schedule(\"Lalau-Hitchcock, Diksha\", schedule) ol_comp(IS)  # Uses default institutional policy ##                INSTRUCTOR ENRLD HRS Overload Pay by Course ## 1 Lalau-Hitchcock, Diksha    12   3                      0 ## 2 Lalau-Hitchcock, Diksha     7   3                      0 ## 3                                                          ## 4                                                          ## 5                                                          ##                      Summary Total Compensation (USD) ## 1                                                     ## 2                                                     ## 3 Over 12 QUALIFIED CR. HRS:                        0 ## 4              OVERLOAD PAY:                       $0 ## 5                      NOTE: # Custom policy example ol_comp(IS, L = 4, U = 8, reg_load = 9, rate_per_cr = 5000 / 3) ##                INSTRUCTOR ENRLD HRS Overload Pay by Course ## 1 Lalau-Hitchcock, Diksha    12   3                      0 ## 2 Lalau-Hitchcock, Diksha     7   3                      0 ## 3                                                          ## 4                                                          ## 5                                                          ##                     Summary Total Compensation (USD) ## 1                                                    ## 2                                                    ## 3 Over 9 QUALIFIED CR. HRS:                        0 ## 4             OVERLOAD PAY:                       $0 ## 5                     NOTE:"},{"path":"/articles/catool-walkthrough.html","id":"list-unique-instructors-in-the-schedule","dir":"Articles","previous_headings":"","what":"👥 List Unique Instructors in the Schedule","title":"catool: Walkthrough","text":"","code":"get_unique_instructors(schedule) ##                INSTRUCTOR ## 1 Lalau-Hitchcock, Diksha ## 2             Smith, John"},{"path":"/articles/catool-walkthrough.html","id":"summarize-overload-compensation-for-an-instructor-by-index","dir":"Articles","previous_headings":"","what":"🔢 Summarize Overload Compensation for an Instructor by Index","title":"catool: Walkthrough","text":"","code":"ol_comp_byindex(1, schedule_df = schedule) ##               INSTRUCTOR ENRLD HRS Overload Pay by Course ##                                                           ##  Lalau-Hitchcock, Diksha    12   3                      0 ##  Lalau-Hitchcock, Diksha     7   3                      0 ##                                                           ##                                                           ##                                                           ##                              Summary Total Compensation (USD) ##  INSTRUCTOR: Lalau-Hitchcock, Diksha                          ##                                                               ##                                                               ##           Over 12 QUALIFIED CR. HRS:                        0 ##                        OVERLOAD PAY:                       $0 ##                                NOTE: ol_comp_byindex(1, schedule_df = schedule, L = 4, U = 9, rate_per_cr = 2500 / 3, reg_load = 12) ##               INSTRUCTOR ENRLD HRS Overload Pay by Course ##                                                           ##  Lalau-Hitchcock, Diksha    12   3                      0 ##  Lalau-Hitchcock, Diksha     7   3                      0 ##                                                           ##                                                           ##                                                           ##                              Summary Total Compensation (USD) ##  INSTRUCTOR: Lalau-Hitchcock, Diksha                          ##                                                               ##                                                               ##           Over 12 QUALIFIED CR. HRS:                        0 ##                        OVERLOAD PAY:                       $0 ##                                NOTE:"},{"path":"/articles/catool-walkthrough.html","id":"summarize-all-instructors-overload-compensation","dir":"Articles","previous_headings":"","what":"📋 Summarize All Instructors’ Overload Compensation","title":"catool: Walkthrough","text":"","code":"ol_comp_summary(schedule) ##                 INSTRUCTOR ENRLD HRS QUALIFIED_CR ROW_AMOUNT  TYPE ## 1  Lalau-Hitchcock, Diksha    12   3            0          0       ## 2  Lalau-Hitchcock, Diksha     7   3            0          0       ## 3                                                          0 TOTAL ## 4                                                                  ## 5                                                                  ## 6                                                                  ## 7                                                                  ## 8                                                                  ## 9                                                                  ## 10                                                                 ## 11             Smith, John     4   3            0          0       ## 12                                                         0 TOTAL ## 13                                                                 ## 14                                                                 ## 15                                                                 ## 16                                                                 ## 17                                                                 ## 18                                                                 ## 19                                                                 ##                                SUMMARY ## 1                                      ## 2                                      ## 3  INSTRUCTOR: Lalau-Hitchcock, Diksha ## 4         Over 12 QUALIFIED CR. HRS: 0 ## 5           Overload Pay Rate: $833.33 ## 6      Total Overload Compensation: $0 ## 7                                      ## 8                                      ## 9                                      ## 10                                     ## 11                                     ## 12             INSTRUCTOR: Smith, John ## 13        Over 12 QUALIFIED CR. HRS: 0 ## 14          Overload Pay Rate: $833.33 ## 15     Total Overload Compensation: $0 ## 16                                     ## 17                                     ## 18                                     ## 19 ol_comp_summary(schedule, L = 4, U = 9, rate_per_cr = 2500 / 3, reg_load = 12) ##                 INSTRUCTOR ENRLD HRS QUALIFIED_CR ROW_AMOUNT  TYPE ## 1  Lalau-Hitchcock, Diksha    12   3            0          0       ## 2  Lalau-Hitchcock, Diksha     7   3            0          0       ## 3                                                          0 TOTAL ## 4                                                                  ## 5                                                                  ## 6                                                                  ## 7                                                                  ## 8                                                                  ## 9                                                                  ## 10                                                                 ## 11             Smith, John     4   3            0          0       ## 12                                                         0 TOTAL ## 13                                                                 ## 14                                                                 ## 15                                                                 ## 16                                                                 ## 17                                                                 ## 18                                                                 ## 19                                                                 ##                                SUMMARY ## 1                                      ## 2                                      ## 3  INSTRUCTOR: Lalau-Hitchcock, Diksha ## 4         Over 12 QUALIFIED CR. HRS: 0 ## 5           Overload Pay Rate: $833.33 ## 6      Total Overload Compensation: $0 ## 7                                      ## 8                                      ## 9                                      ## 10                                     ## 11                                     ## 12             INSTRUCTOR: Smith, John ## 13        Over 12 QUALIFIED CR. HRS: 0 ## 14          Overload Pay Rate: $833.33 ## 15     Total Overload Compensation: $0 ## 16                                     ## 17                                     ## 18                                     ## 19"},{"path":"/articles/catool-walkthrough.html","id":"explanation","dir":"Articles","previous_headings":"","what":"📝 Explanation","title":"catool: Walkthrough","text":"catool package determines overload compensation using institutional rules based : Enrollment (ENRLD) Credit hours (HRS) Regular teaching load (reg_load) Per-credit compensation rate (rate_per_cr)","code":""},{"path":"/articles/catool-walkthrough.html","id":"key-concepts","dir":"Articles","previous_headings":"📝 Explanation","what":"Key Concepts:","title":"catool: Walkthrough","text":"Default Proration Range: Lower Bound (L) = 4 Upper Bound (U) = 9 Courses ENRLD < L → pay Courses L ≤ ENRLD ≤ U → Prorated Courses ENRLD > U → Full pay Regular Load (reg_load): credit hours beyond eligible overload compensation (default = 12 credit hours). Rate per Credit Hour (rate_per_cr): Default 2500 / 3 (≈ 833.33), adjustable reflect institution’s policy.","code":""},{"path":"/articles/catool-walkthrough.html","id":"notes","dir":"Articles","previous_headings":"📝 Explanation","what":"Notes","title":"catool: Walkthrough","text":"thresholds pay rates user-adjustable via function arguments. Output returned tidy, human-readable tibble, ready reporting export.","code":""},{"path":"/articles/catool-walkthrough.html","id":"questions","dir":"Articles","previous_headings":"","what":"📫 Questions?","title":"catool: Walkthrough","text":"questions feedback, contact Dawit Aberra aberrad@fvsu.edu.","code":""},{"path":"/articles/coat-walkthrough.html","id":"introduction","dir":"Articles","previous_headings":"","what":"🔍 Introduction","title":"Compensation Analysis Tool (COAT): Walkthrough","text":"vignette demonstrates use coat R package calculate overload compensation instructors based institutional course schedules compensation policies. package supports individual instructor analysis full-schedule summaries, applying proration eligibility rules based enrollment credit hours.","code":""},{"path":"/articles/coat-walkthrough.html","id":"load-schedule","dir":"Articles","previous_headings":"","what":"🏫 Load Schedule","title":"Compensation Analysis Tool (COAT): Walkthrough","text":"","code":"schedule <- read.csv(\"data-raw/schedule.csv\")"},{"path":"/articles/coat-walkthrough.html","id":"get-schedule-for-one-instructor","dir":"Articles","previous_headings":"","what":"👤 Get Schedule for One Instructor","title":"Compensation Analysis Tool (COAT): Walkthrough","text":"","code":"get_instructor_schedule(\"Lalau-Hitchcock, Diksha\", schedule)"},{"path":"/articles/coat-walkthrough.html","id":"calculate-overload-compensation-for-one-instructor","dir":"Articles","previous_headings":"","what":"💵 Calculate Overload Compensation for One Instructor","title":"Compensation Analysis Tool (COAT): Walkthrough","text":"","code":"IS <- get_instructor_schedule(\"Lalau-Hitchcock, Diksha\", schedule) ol_comp(IS)  # Uses default institutional policy  # Custom policy example ol_comp(IS, L = 4, U = 8, reg_load = 9, rate_per_cr = 5000 / 3)"},{"path":"/articles/coat-walkthrough.html","id":"list-unique-instructors-in-the-schedule","dir":"Articles","previous_headings":"","what":"👥 List Unique Instructors in the Schedule","title":"Compensation Analysis Tool (COAT): Walkthrough","text":"","code":"get_unique_instructors(schedule)"},{"path":"/articles/coat-walkthrough.html","id":"summarize-overload-compensation-for-an-instructor-by-index","dir":"Articles","previous_headings":"","what":"🔢 Summarize Overload Compensation for an Instructor by Index","title":"Compensation Analysis Tool (COAT): Walkthrough","text":"","code":"ol_comp_byindex(108, schedule_df = schedule) ol_comp_byindex(108, schedule_df = schedule, L = 4, U = 9, rate_per_cr = 2500 / 3, reg_load = 12)"},{"path":"/articles/coat-walkthrough.html","id":"summarize-all-instructors-overload-compensation","dir":"Articles","previous_headings":"","what":"📋 Summarize All Instructors’ Overload Compensation","title":"Compensation Analysis Tool (COAT): Walkthrough","text":"","code":"ol_comp_summary(schedule) ol_comp_summary(schedule, L = 4, U = 9, rate_per_cr = 2500 / 3, reg_load = 12)"},{"path":"/articles/coat-walkthrough.html","id":"explanation","dir":"Articles","previous_headings":"","what":"📝 Explanation","title":"Compensation Analysis Tool (COAT): Walkthrough","text":"COAT package determines overload compensation using institutional rules based : Enrollment (ENRLD) Credit hours (HRS) Regular teaching load (reg_load) Per-credit compensation rate (rate_per_cr)","code":""},{"path":"/articles/coat-walkthrough.html","id":"key-concepts","dir":"Articles","previous_headings":"📝 Explanation","what":"Key Concepts:","title":"Compensation Analysis Tool (COAT): Walkthrough","text":"Default Proration Range: Lower Bound (L) = 4 Upper Bound (U) = 9 Courses ENRLD < L → pay Courses L ≤ ENRLD ≤ U → Prorated Courses ENRLD > U → Full pay Regular Load (reg_load): credit hours beyond eligible overload compensation (default = 12 credit hours). Rate per Credit Hour (rate_per_cr): Default 2500 / 3 (≈ 833.33), adjustable reflect institution’s policy.","code":""},{"path":"/articles/coat-walkthrough.html","id":"notes","dir":"Articles","previous_headings":"📝 Explanation","what":"Notes","title":"Compensation Analysis Tool (COAT): Walkthrough","text":"thresholds pay rates user-adjustable via function arguments. Output returned tidy, human-readable tibble, ready reporting export.","code":""},{"path":"/articles/coat-walkthrough.html","id":"questions","dir":"Articles","previous_headings":"","what":"📫 Questions?","title":"Compensation Analysis Tool (COAT): Walkthrough","text":"questions feedback, contact Dawit Aberra aberrad@fvsu.edu.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dawit Aberra. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aberra D (2025). catool: Compensation Analysis Tool Faculty Overload Pay. R package version 1.0.0.","code":"@Manual{,   title = {catool: Compensation Analysis Tool for Faculty Overload Pay},   author = {Dawit Aberra},   year = {2025},   note = {R package version 1.0.0}, }"},{"path":[]},{"path":"/index.html","id":"catool-compensation-analysis-tool-1","dir":"","previous_headings":"","what":"catool: Compensation Analysis Tool","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"catool (Compensation Analysis Tool) R package calculates fair transparent overload pay college instructors. processes course schedule data, identifies overload credit hours, applies enrollment-based proration logic compute compensation aligned institutional policies.","code":""},{"path":"/index.html","id":"wrench-features","dir":"","previous_headings":"","what":"🔧 Features","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"Filters qualified credit hours enrollment Computes prorated overload compensation per course Summarizes instructor-level pay Batch-processes full schedules Filters subject, instructor, division Outputs clean, export-ready summary tables","code":""},{"path":"/index.html","id":"package-installation","dir":"","previous_headings":"","what":"📦 Installation","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"","code":"# Install directly from GitHub # install.packages(\"remotes\")  # Only if not installed remotes::install_github(\"dawit3000/catool\")"},{"path":"/index.html","id":"card_index_dividers-example-usage","dir":"","previous_headings":"","what":"🗂️ Example Usage","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"","code":"library(catool) schedule <- read.csv(\"data-raw/schedule.csv\")  # One instructor ol_comp(get_instructor_schedule(\"Lalau-Hitchcock\", schedule))  # With custom policy ol_comp(get_instructor_schedule(\"Smith\", schedule),         L = 4, U = 9, rate_per_cr = 2500 / 3, reg_load = 12)  # Full summary ol_comp_summary(schedule)"},{"path":"/index.html","id":"mag-advanced-filtering","dir":"","previous_headings":"","what":"🔍 Advanced Filtering","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"","code":"get_division_schedule(\"Business Administration\", schedule) get_subject_schedule(\"^MATH|^STAT\", schedule) filter_schedule(schedule, division = \"Nursing\", instructor_pattern = \"lee\")"},{"path":"/index.html","id":"page_facing_up-input-format","dir":"","previous_headings":"","what":"📄 Input Format","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"course schedule must contain columns:","code":""},{"path":"/index.html","id":"bar_chart-output","dir":"","previous_headings":"","what":"📊 Output","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"package returns tidy tibble : Overload pay per course Qualified credit hours Summary block total compensation Labels formatting readability","code":""},{"path":"/index.html","id":"books-documentation","dir":"","previous_headings":"","what":"📚 Documentation","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"🔗 View Full Walkthrough vignette explains methodology, assumptions, policy logic, examples detail.","code":""},{"path":"/index.html","id":"writing_hand-author","dir":"","previous_headings":"","what":"✍️ Author","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"Developed maintained Dawit Aberra. Licensed AGPL-3. Please cite appropriately using tool research administrative systems.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Dawit Aberra Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/filter_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Course Schedule by Division, Subject, and/or Instructor — filter_schedule","title":"Filter Course Schedule by Division, Subject, and/or Instructor — filter_schedule","text":"Applies one filters course schedule: instructor name (regex), subject code (regex), /academic division. Matching case-insensitive filters optional.","code":""},{"path":"/reference/filter_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Course Schedule by Division, Subject, and/or Instructor — filter_schedule","text":"","code":"filter_schedule(   schedule,   division = NULL,   subject_pattern = NULL,   instructor_pattern = NULL )"},{"path":"/reference/filter_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Course Schedule by Division, Subject, and/or Instructor — filter_schedule","text":"schedule data frame containing course schedule INSTRUCTOR SUBJ columns. division Optional character string naming division (must match known values). subject_pattern Optional regex pattern filtering subject codes (e.g., \"CSCI\", \"^MATH\"). instructor_pattern Optional regex pattern instructor name (e.g., \"Smith\", \"^Jones\").","code":""},{"path":"/reference/filter_schedule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Course Schedule by Division, Subject, and/or Instructor — filter_schedule","text":"filtered course schedule data frame.","code":""},{"path":"/reference/filter_schedule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Course Schedule by Division, Subject, and/or Instructor — filter_schedule","text":"","code":"schedule <- data.frame(INSTRUCTOR = c(\"Lee\", \"Smith\"),                        SUBJ = c(\"MATH\", \"NURS\"),                        stringsAsFactors = FALSE) filter_schedule(schedule, division = \"Nursing\") #>   INSTRUCTOR SUBJ #> 1      Smith NURS filter_schedule(schedule, subject_pattern = \"^MATH|^STAT\") #>   INSTRUCTOR SUBJ #> 1        Lee MATH filter_schedule(schedule, instructor_pattern = \"smith\") #>   INSTRUCTOR SUBJ #> 1      Smith NURS filter_schedule(schedule, division = \"Business Administration\", instructor_pattern = \"Lee\") #> Warning: No courses found for division: 'Business Administration' #> Warning: No records found after applying filters. #> [1] INSTRUCTOR SUBJ       #> <0 rows> (or 0-length row.names)"},{"path":"/reference/get_division_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Course Schedule by Division — get_division_schedule","title":"Filter Course Schedule by Division — get_division_schedule","text":"Returns subset schedule matching named academic division. function maps division names associated subject codes filters accordingly.","code":""},{"path":"/reference/get_division_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Course Schedule by Division — get_division_schedule","text":"","code":"get_division_schedule(division_name, schedule)"},{"path":"/reference/get_division_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Course Schedule by Division — get_division_schedule","text":"division_name character string naming division (must match one known values). schedule data frame containing course schedule data SUBJ column.","code":""},{"path":"/reference/get_division_schedule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Course Schedule by Division — get_division_schedule","text":"filtered data frame containing courses specified division.","code":""},{"path":"/reference/get_division_schedule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Course Schedule by Division — get_division_schedule","text":"","code":"schedule <- data.frame(SUBJ = c(\"MATH\", \"NURS\", \"BIOL\")) get_division_schedule(\"Natural and Computational Sciences\", schedule) #>   SUBJ #> 1 MATH #> 2 BIOL get_division_schedule(\"Nursing\", schedule) #>   SUBJ #> 1 NURS"},{"path":"/reference/get_instructor_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Course Schedule by Instructor (Regex-Friendly, Case-Insensitive) — get_instructor_schedule","title":"Filter Course Schedule by Instructor (Regex-Friendly, Case-Insensitive) — get_instructor_schedule","text":"Returns subset course schedule containing courses taught specified instructor. Matching case-insensitive supports regular expressions, allowing flexible partial pattern-based matching. match found, warning issued empty data frame returned.","code":""},{"path":"/reference/get_instructor_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Course Schedule by Instructor (Regex-Friendly, Case-Insensitive) — get_instructor_schedule","text":"","code":"get_instructor_schedule(instructor_name, schedule_df = schedule)"},{"path":"/reference/get_instructor_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Course Schedule by Instructor (Regex-Friendly, Case-Insensitive) — get_instructor_schedule","text":"instructor_name character string (regular expression) used match values INSTRUCTOR column. schedule_df data frame containing course schedule data INSTRUCTOR column. Defaults schedule specified.","code":""},{"path":"/reference/get_instructor_schedule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Course Schedule by Instructor (Regex-Friendly, Case-Insensitive) — get_instructor_schedule","text":"data frame courses assigned instructors matching given pattern.","code":""},{"path":"/reference/get_instructor_schedule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Course Schedule by Instructor (Regex-Friendly, Case-Insensitive) — get_instructor_schedule","text":"","code":"get_instructor_schedule(\"smith\", schedule_df = schedule)  # partial match #>   P.of.T SUBJ NUMB SECT   CRN                       TITLE NOTES HRS ENRLD #> 1      1 CSCI 4999    1 49388 SPECIAL TOPICS IN CSCI/CSIS         3    12 #>   MAXENRL       TIMES DAYS                       LOCATION      INSTRUCTOR #> 1      15 11:00-12:15  T R 0219 COMPUTER TECHNOLOGY/MATHE Smith, Courtney #>        CAMPUS #> 1 Main Campus get_instructor_schedule(\"^Smith,\", schedule_df = schedule)  # regex: starts with Smith #>   P.of.T SUBJ NUMB SECT   CRN                       TITLE NOTES HRS ENRLD #> 1      1 CSCI 4999    1 49388 SPECIAL TOPICS IN CSCI/CSIS         3    12 #>   MAXENRL       TIMES DAYS                       LOCATION      INSTRUCTOR #> 1      15 11:00-12:15  T R 0219 COMPUTER TECHNOLOGY/MATHE Smith, Courtney #>        CAMPUS #> 1 Main Campus get_instructor_schedule(\"Robinson|Smith\", schedule_df = schedule)  # regex: matches either #>   P.of.T SUBJ NUMB SECT   CRN                       TITLE NOTES HRS ENRLD #> 1      1 CSCI 4999    1 49388 SPECIAL TOPICS IN CSCI/CSIS         3    12 #>   MAXENRL       TIMES DAYS                       LOCATION      INSTRUCTOR #> 1      15 11:00-12:15  T R 0219 COMPUTER TECHNOLOGY/MATHE Smith, Courtney #>        CAMPUS #> 1 Main Campus"},{"path":"/reference/get_subject_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Course Schedule by Subject Code (Regex-Friendly) — get_subject_schedule","title":"Filter Course Schedule by Subject Code (Regex-Friendly) — get_subject_schedule","text":"Returns subset schedule SUBJ (subject code) column matches given pattern. Matching case-insensitive supports regular expressions.","code":""},{"path":"/reference/get_subject_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Course Schedule by Subject Code (Regex-Friendly) — get_subject_schedule","text":"","code":"get_subject_schedule(subject_pattern, schedule)"},{"path":"/reference/get_subject_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Course Schedule by Subject Code (Regex-Friendly) — get_subject_schedule","text":"subject_pattern character string regular expression match subject codes. schedule data frame containing course schedule data SUBJ column.","code":""},{"path":"/reference/get_subject_schedule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Course Schedule by Subject Code (Regex-Friendly) — get_subject_schedule","text":"filtered data frame containing matching subject codes.","code":""},{"path":"/reference/get_subject_schedule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Course Schedule by Subject Code (Regex-Friendly) — get_subject_schedule","text":"","code":"schedule <- data.frame(SUBJ = c(\"CSCI\", \"MATH\", \"STAT\")) get_subject_schedule(\"CSCI\", schedule) #>   SUBJ #> 1 CSCI get_subject_schedule(\"^MATH|^STAT\", schedule) #>   SUBJ #> 1 MATH #> 2 STAT"},{"path":"/reference/get_unique_instructors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Unique Instructor Names — get_unique_instructors","title":"Get Unique Instructor Names — get_unique_instructors","text":"Extracts sorted list unique, non-empty instructor names schedule data frame.","code":""},{"path":"/reference/get_unique_instructors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Unique Instructor Names — get_unique_instructors","text":"","code":"get_unique_instructors(schedule_df)"},{"path":"/reference/get_unique_instructors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Unique Instructor Names — get_unique_instructors","text":"schedule_df data frame containing INSTRUCTOR column.","code":""},{"path":"/reference/get_unique_instructors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Unique Instructor Names — get_unique_instructors","text":"data frame one column: unique instructor names sorted alphabetically.","code":""},{"path":"/reference/get_unique_instructors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Unique Instructor Names — get_unique_instructors","text":"","code":"# get_unique_instructors(schedule)"},{"path":"/reference/ol_comp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Overload Compensation for One Instructor — ol_comp","title":"Calculate Overload Compensation for One Instructor — ol_comp","text":"Computes prorated overload pay qualified credit hours single instructor based course credit hours, enrollment, institutional overload rules.","code":""},{"path":"/reference/ol_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Overload Compensation for One Instructor — ol_comp","text":"","code":"ol_comp(instructor_schedule, L = 4, U = 9, rate_per_cr = 2500/3, reg_load = 12)"},{"path":"/reference/ol_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Overload Compensation for One Instructor — ol_comp","text":"instructor_schedule data frame instructor's courses, columns ENRLD (enrollment) HRS (credit hours). L Lower enrollment threshold overload pay qualification (default = 4). U Upper limit proration; courses ENRLD > U get full-rate pay (default = 9). rate_per_cr Base overload pay per credit hour (default = 2500/3). reg_load Regular teaching load credit hours (default = 12).","code":""},{"path":"/reference/ol_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Overload Compensation for One Instructor — ol_comp","text":"tibble original schedule, overload pay course, summary block.","code":""},{"path":"/reference/ol_comp_byindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Overload Compensation for One Instructor (by Index) — ol_comp_byindex","title":"Calculate Overload Compensation for One Instructor (by Index) — ol_comp_byindex","text":"Retrieves instructor's name index schedule calculates overload compensation using ol_comp(). Returns clean, readable summary labeled header row, consistent Shiny App output.","code":""},{"path":"/reference/ol_comp_byindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Overload Compensation for One Instructor (by Index) — ol_comp_byindex","text":"","code":"ol_comp_byindex(   i,   schedule_df,   L = 4,   U = 9,   rate_per_cr = 2500/3,   reg_load = 12 )"},{"path":"/reference/ol_comp_byindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Overload Compensation for One Instructor (by Index) — ol_comp_byindex","text":"Integer index instructor (returned get_unique_instructors()). schedule_df data frame full course schedule containing INSTRUCTOR column. L Lower enrollment threshold overload eligibility (inclusive). Default 4. U Upper enrollment limit proration (inclusive). Default 9. rate_per_cr Overload pay rate per credit hour. Default 2500/3. reg_load Regular teaching load credit hours. Default 12.","code":""},{"path":"/reference/ol_comp_byindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Overload Compensation for One Instructor (by Index) — ol_comp_byindex","text":"Invisibly returns tibble instructor’s overload compensation summary, formatted display.","code":""},{"path":"/reference/ol_comp_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Overload Compensation for One or All Instructors — ol_comp_summary","title":"Summarize Overload Compensation for One or All Instructors — ol_comp_summary","text":"Calculates overload compensation instructor (selected one) based institutional policies. Output includes course-level pay, qualified credit hours, readable summary section instructor.","code":""},{"path":"/reference/ol_comp_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Overload Compensation for One or All Instructors — ol_comp_summary","text":"","code":"ol_comp_summary(   schedule_df,   instructor = NULL,   L = 4,   U = 9,   rate_per_cr = 2500/3,   reg_load = 12 )"},{"path":"/reference/ol_comp_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Overload Compensation for One or All Instructors — ol_comp_summary","text":"schedule_df data frame containing full course schedule, including INSTRUCTOR, HRS, ENRLD. instructor Optional string. provided, limits output instructor. Default NULL (). L Lower enrollment threshold overload eligibility (default = 4). U Upper limit proration. ENRLD > U gets full-rate pay (default = 9). rate_per_cr Pay rate per credit hour (default = 2500/3). reg_load Regular teaching load credit hours (default = 12).","code":""},{"path":"/reference/ol_comp_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Overload Compensation for One or All Instructors — ol_comp_summary","text":"tibble combining course-level pay instructor summaries one instructors.","code":""},{"path":"/reference/schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Schedule Dataset — schedule","title":"Sample Schedule Dataset — schedule","text":"dataset represents sample class schedule used several institutions, slight variations variable names. Users must ensure key variables—HRS, ENRLD, INSTRUCTOR—properly named formatted functions package work correctly.","code":""},{"path":"/reference/schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Schedule Dataset — schedule","text":"","code":"schedule"},{"path":"/reference/schedule.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Schedule Dataset — schedule","text":"object class data.frame 665 rows 15 columns.","code":""},{"path":"/reference/schedule.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample Schedule Dataset — schedule","text":"Included package data/schedule.rda","code":""},{"path":"/reference/schedule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Schedule Dataset — schedule","text":"dataset containing instructor schedules overload analysis. dataset 665 rows 15 columns, including: HRS Credit hours course. ENRLD Number students enrolled course. INSTRUCTOR Name instructor teaching course (anonymized).","code":""},{"path":[]},{"path":"/news/index.html","id":"first-stable-release-tada-1-0-0","dir":"Changelog","previous_headings":"","what":"First Stable Release 🎉","title":"coat 1.0.0","text":"🚀 coat (Compensation Analysis Tool) fully-featured R package analyzing faculty overload compensation transparency, consistency, proration logic based enrollment thresholds.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-function-renames-for-clarity--consistency-1-0-0","dir":"Changelog","previous_headings":"First Stable Release 🎉 > ✅ Major Updates","what":"🆕 Function Renames for Clarity & Consistency","title":"coat 1.0.0","text":"calculate_overload_compensation() → ol_comp() summarize_instructor_by_index() → ol_comp_byindex() summarize_all_instructors() → ol_comp_summary() list_unique_instructors() → get_unique_instructors()","code":""},{"path":"/news/index.html","id":"package-core-features-1-0-0","dir":"Changelog","previous_headings":"First Stable Release 🎉 > ✅ Major Updates","what":"📦 Core Features","title":"coat 1.0.0","text":"Calculates prorated overload pay per course. Applies institutional rules (e.g., enrollment thresholds regular load). Extracts one instructor’s schedule full course dataset. Generate readable summaries instructor across full schedule. Returns alphabetically sorted list instructors.","code":""},{"path":"/news/index.html","id":"bar_chart-data-1-0-0","dir":"Changelog","previous_headings":"First Stable Release 🎉","what":"📊 Data","title":"coat 1.0.0","text":"schedule: Sample dataset testing variables HRS, ENRLD, INSTRUCTOR.","code":""},{"path":"/news/index.html","id":"wrench-internal-improvements-1-0-0","dir":"Changelog","previous_headings":"First Stable Release 🎉","what":"🔧 Internal Improvements","title":"coat 1.0.0","text":"Standardized roxygen documentation exported functions Updated README, vignette, tests, DESCRIPTION Cleaned global variable declarations satisfy CRAN checks Passed R CMD check : 0 errors | 0 warnings | 3 notes (notes documented cran-comments.md) 💡 See vignette complete walkthrough usage examples.","code":""}]
