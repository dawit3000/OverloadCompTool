[{"path":"/articles/catool-walkthrough.html","id":"introduction","dir":"Articles","previous_headings":"","what":"🔍 Introduction","title":"catool: Walkthrough","text":"vignette demonstrates use catool R package calculate fair transparent overload compensation college instructors, based institutional course schedules compensation policies. package supports analysis individual instructors full teaching schedules using well-defined eligibility proration rules based enrollment credit hour thresholds.","code":""},{"path":"/articles/catool-walkthrough.html","id":"prepare-your-schedule-data","dir":"Articles","previous_headings":"","what":"🏫 Prepare Your Schedule Data","title":"catool: Walkthrough","text":"use catool, schedule data must include minimum: INSTRUCTOR: Instructor name (e.g., “Smith, John”) ENRLD: Enrollment count course HRS: Credit hours course can import data .csv file using read.csv(\"yourfile.csv\"). ’s small example:","code":"schedule <- data.frame(   INSTRUCTOR = c(\"Lalau-Hitchcock, Diksha\", \"Lalau-Hitchcock, Diksha\", \"Smith, John\"),   ENRLD = c(12, 7, 4),   HRS = c(3, 3, 3),   stringsAsFactors = FALSE )"},{"path":"/articles/catool-walkthrough.html","id":"analyze-one-instructor","dir":"Articles","previous_headings":"","what":"👤 Analyze One Instructor","title":"catool: Walkthrough","text":"","code":"# Filter by instructor name (case-insensitive) inst_schedule <- get_instructor_schedule(\"Lalau-Hitchcock\", schedule)  # Calculate overload compensation using default policy ol_comp(inst_schedule)  # You can also apply custom policy parameters ol_comp(inst_schedule, L = 4, U = 8, reg_load = 9, rate_per_cr = 5000 / 3)"},{"path":"/articles/catool-walkthrough.html","id":"see-all-instructors-in-the-schedule","dir":"Articles","previous_headings":"","what":"👥 See All Instructors in the Schedule","title":"catool: Walkthrough","text":"","code":"get_unique_instructors(schedule)"},{"path":"/articles/catool-walkthrough.html","id":"analyze-by-instructor-index","dir":"Articles","previous_headings":"","what":"🔢 Analyze by Instructor Index","title":"catool: Walkthrough","text":"","code":"# Get summary for a specific instructor by index ol_comp_byindex(1, schedule_df = schedule)  # With custom policy ol_comp_byindex(1, schedule_df = schedule, L = 4, U = 9, reg_load = 12, rate_per_cr = 2500 / 3)"},{"path":"/articles/catool-walkthrough.html","id":"summarize-all-instructors","dir":"Articles","previous_headings":"","what":"📋 Summarize All Instructors","title":"catool: Walkthrough","text":"","code":"ol_comp_summary(schedule)  # With custom institutional policy ol_comp_summary(schedule, L = 4, U = 9, reg_load = 12, rate_per_cr = 2500 / 3)"},{"path":"/articles/catool-walkthrough.html","id":"explanation-of-policy-rules","dir":"Articles","previous_headings":"","what":"🧮 Explanation of Policy Rules","title":"catool: Walkthrough","text":"overload compensation algorithm catool reflects typical institutional policy logic designed ensure fairness consistency.","code":""},{"path":"/articles/catool-walkthrough.html","id":"policy-parameters","dir":"Articles","previous_headings":"🧮 Explanation of Policy Rules","what":"💡 Policy Parameters","title":"catool: Walkthrough","text":"ENRLD: Course enrollment HRS: Credit hours per course reg_load: Regular teaching load (default = 12 credit hours) rate_per_cr: Compensation per qualified credit hour (default = 2500 / 3)","code":""},{"path":"/articles/catool-walkthrough.html","id":"key-rules","dir":"Articles","previous_headings":"🧮 Explanation of Policy Rules","what":"⚖️ Key Rules","title":"catool: Walkthrough","text":"Qualified Credit Hours credit hours exceeding instructor’s regular load (reg_load) eligible overload pay. Enrollment-Based Eligibility Courses ENRLD < L (default L = 4) excluded compensation. enrollment corresponding qualified credit hours less 10, pay prorated. enrollment 10 , pay awarded full. Fair Distribution Courses sorted enrollment descending order. Qualified hours counted least-enrolled eligible course upward, ensuring populated classes taught part regular load. reflects standard policy assumptions: institutions prioritize assigning higher-impact (larger) courses regular load, identify overload less-enrolled offerings.","code":""},{"path":"/articles/catool-walkthrough.html","id":"questions","dir":"Articles","previous_headings":"","what":"📫 Questions?","title":"catool: Walkthrough","text":"questions feedback, please open GitHub issue contact Dawit Aberra aberrad@fvsu.edu.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dawit Aberra. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aberra D (2025). catool: Compensation Analysis Tool Faculty Overload Pay. R package version 1.0.0, https://dawit3000.github.io/catool.","code":"@Manual{,   title = {catool: Compensation Analysis Tool for Faculty Overload Pay},   author = {Dawit Aberra},   year = {2025},   note = {R package version 1.0.0},   url = {https://dawit3000.github.io/catool}, }"},{"path":"/index.html","id":"catool-compensation-analysis-tool","dir":"","previous_headings":"","what":"Compensation Analysis Tool for Faculty Overload Pay","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"catool (Compensation Analysis Tool) R package calculates fair transparent overload pay college instructors. processes course schedule data, identifies credit hour overloads, applies proration rules compute compensation based institutional policies. Unlike simple per-course systems, catool prorates pay based qualified credit hours — enrollment thresholds met.","code":""},{"path":"/index.html","id":"wrench-features","dir":"","previous_headings":"","what":"🔧 Features","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"Filters courses ineligible compensation (e.g., -enrolled) Identifies overload based regular teaching load Computes pay per qualified credit hour, prorated applicable Prioritizes assigning higher-enrollment courses regular load Summarizes compensation instructor across full schedules Supports flexible filtering subject, instructor, division Returns export-ready, human-readable tibble output","code":""},{"path":"/index.html","id":"package-installation","dir":"","previous_headings":"","what":"📦 Installation","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"","code":"# Install from GitHub # install.packages(\"remotes\")  # If needed remotes::install_github(\"dawit3000/catool\")"},{"path":"/index.html","id":"card_index_dividers-example-usage","dir":"","previous_headings":"","what":"🗂️ Example Usage","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"","code":"library(catool) schedule <- read.csv(\"data-raw/schedule.csv\")  # Analyze one instructor ol_comp(get_instructor_schedule(\"Lalau-Hitchcock\", schedule))  # With a custom institutional policy ol_comp(get_instructor_schedule(\"Smith\", schedule),         L = 4, U = 9, rate_per_cr = 2500 / 3, reg_load = 12)  # Summarize compensation across the full schedule ol_comp_summary(schedule)"},{"path":"/index.html","id":"mag-advanced-filtering","dir":"","previous_headings":"","what":"🔍 Advanced Filtering","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"","code":"# Filter by division get_division_schedule(\"Business Administration\", schedule)  # Filter by subject codes using regex get_subject_schedule(\"^MATH|^STAT\", schedule)  # Apply combined filters filter_schedule(schedule,                 division = \"Nursing\",                 instructor_pattern = \"lee\")"},{"path":"/index.html","id":"page_facing_up-input-format","dir":"","previous_headings":"","what":"📄 Input Format","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"input schedule must include following columns: Additional columns like TITLE, DAYS, LOCATION allowed required.","code":""},{"path":"/index.html","id":"bar_chart-output-overview","dir":"","previous_headings":"","what":"📊 Output Overview","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"output tidy tibble : QUALIFIED_CR: Credit hours eligible overload pay ROW_AMOUNT: Compensation amount hours TYPE: \"PRORATED\" enrollment threshold; blank otherwise summary block showing total compensation, rate used, policy notes SUMMARY: final column providing labeled context (e.g., “INSTRUCTOR: Smith”) Pay calculated qualified credit hours beyond regular teaching load. enrollment hours 10, pay prorated accordingly — per course.","code":""},{"path":"/index.html","id":"books-documentation","dir":"","previous_headings":"","what":"📚 Documentation","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"📖 Full Walkthrough Vignette Includes policy logic, assumptions, examples individual batch analyses.","code":""},{"path":"/index.html","id":"writing_hand-author","dir":"","previous_headings":"","what":"✍️ Author","title":"Compensation Analysis Tool for Faculty Overload Pay","text":"Developed maintained Dawit Aberra 📧 dawit3000@hotmail.com Licensed AGPL-3 Please cite appropriately using tool research, audits, policy design. issues suggestions, open GitHub issue.","code":""},{"path":"/reference/filter_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Course Schedule by Division, Subject, and/or Instructor — filter_schedule","title":"Filter Course Schedule by Division, Subject, and/or Instructor — filter_schedule","text":"Applies one filters course schedule: instructor name (regex), subject code (regex), /academic division. Matching case-insensitive filters optional.","code":""},{"path":"/reference/filter_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Course Schedule by Division, Subject, and/or Instructor — filter_schedule","text":"","code":"filter_schedule(   schedule,   division = NULL,   subject_pattern = NULL,   instructor_pattern = NULL )"},{"path":"/reference/filter_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Course Schedule by Division, Subject, and/or Instructor — filter_schedule","text":"schedule data frame containing course schedule INSTRUCTOR SUBJ columns. division Optional character string naming division (must match known values). subject_pattern Optional regex pattern filtering subject codes (e.g., \"CSCI\", \"^MATH\"). instructor_pattern Optional regex pattern instructor name (e.g., \"Smith\", \"^Jones\").","code":""},{"path":"/reference/filter_schedule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Course Schedule by Division, Subject, and/or Instructor — filter_schedule","text":"filtered course schedule data frame.","code":""},{"path":"/reference/filter_schedule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Course Schedule by Division, Subject, and/or Instructor — filter_schedule","text":"","code":"schedule <- data.frame(INSTRUCTOR = c(\"Lee\", \"Smith\"),                        SUBJ = c(\"MATH\", \"NURS\"),                        stringsAsFactors = FALSE) filter_schedule(schedule, division = \"Nursing\") #>   INSTRUCTOR SUBJ #> 1      Smith NURS filter_schedule(schedule, subject_pattern = \"^MATH|^STAT\") #>   INSTRUCTOR SUBJ #> 1        Lee MATH filter_schedule(schedule, instructor_pattern = \"smith\") #>   INSTRUCTOR SUBJ #> 1      Smith NURS filter_schedule(schedule, division = \"Business Administration\", instructor_pattern = \"Lee\") #> Warning: No courses found for division: 'Business Administration' #> Warning: No records found after applying filters. #> [1] INSTRUCTOR SUBJ       #> <0 rows> (or 0-length row.names)"},{"path":"/reference/get_division_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Course Schedule by Division — get_division_schedule","title":"Filter Course Schedule by Division — get_division_schedule","text":"Returns subset course schedule specified academic division. Division names mapped associated subject codes, subjects retained.","code":""},{"path":"/reference/get_division_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Course Schedule by Division — get_division_schedule","text":"","code":"get_division_schedule(division_name, schedule)"},{"path":"/reference/get_division_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Course Schedule by Division — get_division_schedule","text":"division_name character string naming academic division (must match known value). schedule data frame containing SUBJ column (subject code).","code":""},{"path":"/reference/get_division_schedule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Course Schedule by Division — get_division_schedule","text":"filtered data frame courses specified division.","code":""},{"path":"/reference/get_division_schedule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Course Schedule by Division — get_division_schedule","text":"","code":"schedule <- data.frame(SUBJ = c(\"MATH\", \"NURS\", \"BIOL\")) get_division_schedule(\"Natural and Computational Sciences\", schedule) #>   SUBJ #> 1 MATH #> 2 BIOL get_division_schedule(\"Nursing\", schedule) #>   SUBJ #> 1 NURS"},{"path":"/reference/get_instructor_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Course Schedule by Instructor (Regex-Friendly, Case-Insensitive) — get_instructor_schedule","title":"Filter Course Schedule by Instructor (Regex-Friendly, Case-Insensitive) — get_instructor_schedule","text":"Returns subset course schedule containing courses taught specified instructor. Matching case-insensitive supports regular expressions, allowing flexible partial pattern-based matching. match found, warning issued empty data frame returned.","code":""},{"path":"/reference/get_instructor_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Course Schedule by Instructor (Regex-Friendly, Case-Insensitive) — get_instructor_schedule","text":"","code":"get_instructor_schedule(instructor_name, schedule_df = schedule)"},{"path":"/reference/get_instructor_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Course Schedule by Instructor (Regex-Friendly, Case-Insensitive) — get_instructor_schedule","text":"instructor_name character string (regular expression) used match values INSTRUCTOR column. schedule_df data frame containing course schedule data INSTRUCTOR column. Defaults schedule specified.","code":""},{"path":"/reference/get_instructor_schedule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Course Schedule by Instructor (Regex-Friendly, Case-Insensitive) — get_instructor_schedule","text":"data frame courses assigned instructors matching given pattern, sorted descending enrollment.","code":""},{"path":"/reference/get_instructor_schedule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Course Schedule by Instructor (Regex-Friendly, Case-Insensitive) — get_instructor_schedule","text":"","code":"get_instructor_schedule(\"smith\", schedule_df = schedule)  # partial match #>   P.of.T SUBJ NUMB SECT   CRN                       TITLE NOTES HRS ENRLD #> 1      1 CSCI 4999    1 49388 SPECIAL TOPICS IN CSCI/CSIS         3    12 #>   MAXENRL       TIMES DAYS                       LOCATION      INSTRUCTOR #> 1      15 11:00-12:15  T R 0219 COMPUTER TECHNOLOGY/MATHE Smith, Courtney #>        CAMPUS #> 1 Main Campus get_instructor_schedule(\"^Smith,\", schedule_df = schedule)  # regex: starts with Smith #>   P.of.T SUBJ NUMB SECT   CRN                       TITLE NOTES HRS ENRLD #> 1      1 CSCI 4999    1 49388 SPECIAL TOPICS IN CSCI/CSIS         3    12 #>   MAXENRL       TIMES DAYS                       LOCATION      INSTRUCTOR #> 1      15 11:00-12:15  T R 0219 COMPUTER TECHNOLOGY/MATHE Smith, Courtney #>        CAMPUS #> 1 Main Campus get_instructor_schedule(\"Robinson|Smith\", schedule_df = schedule)  # regex: matches either #>   P.of.T SUBJ NUMB SECT   CRN                       TITLE NOTES HRS ENRLD #> 1      1 CSCI 4999    1 49388 SPECIAL TOPICS IN CSCI/CSIS         3    12 #>   MAXENRL       TIMES DAYS                       LOCATION      INSTRUCTOR #> 1      15 11:00-12:15  T R 0219 COMPUTER TECHNOLOGY/MATHE Smith, Courtney #>        CAMPUS #> 1 Main Campus"},{"path":"/reference/get_subject_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Course Schedule by Subject Code (Regex-Friendly) — get_subject_schedule","title":"Filter Course Schedule by Subject Code (Regex-Friendly) — get_subject_schedule","text":"Returns subset schedule SUBJ (subject code) column matches given pattern. Matching case-insensitive supports regular expressions.","code":""},{"path":"/reference/get_subject_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Course Schedule by Subject Code (Regex-Friendly) — get_subject_schedule","text":"","code":"get_subject_schedule(subject_pattern, schedule)"},{"path":"/reference/get_subject_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Course Schedule by Subject Code (Regex-Friendly) — get_subject_schedule","text":"subject_pattern character string regular expression match subject codes. schedule data frame containing course schedule data SUBJ column.","code":""},{"path":"/reference/get_subject_schedule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Course Schedule by Subject Code (Regex-Friendly) — get_subject_schedule","text":"filtered data frame containing matching subject codes.","code":""},{"path":"/reference/get_subject_schedule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Course Schedule by Subject Code (Regex-Friendly) — get_subject_schedule","text":"","code":"schedule <- data.frame(SUBJ = c(\"CSCI\", \"MATH\", \"STAT\")) get_subject_schedule(\"CSCI\", schedule) #>   SUBJ #> 1 CSCI get_subject_schedule(\"^MATH|^STAT\", schedule) #>   SUBJ #> 1 MATH #> 2 STAT"},{"path":"/reference/get_unique_instructors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Unique Instructor Names — get_unique_instructors","title":"Get Unique Instructor Names — get_unique_instructors","text":"Extracts sorted vector unique, non-empty instructor names schedule data frame.","code":""},{"path":"/reference/get_unique_instructors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Unique Instructor Names — get_unique_instructors","text":"","code":"get_unique_instructors(schedule_df)"},{"path":"/reference/get_unique_instructors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Unique Instructor Names — get_unique_instructors","text":"schedule_df data frame containing INSTRUCTOR column.","code":""},{"path":"/reference/get_unique_instructors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Unique Instructor Names — get_unique_instructors","text":"character vector instructor names, sorted alphabetically.","code":""},{"path":"/reference/get_unique_instructors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Unique Instructor Names — get_unique_instructors","text":"","code":"get_unique_instructors(schedule) #>                     INSTRUCTOR #> 1                  Ali, Justin #> 2               Allen, Kerrian #> 3        Amphonephong, Vanessa #> 4           Armbruster, Connor #> 5           Armstrong, Darnell #> 6           Armstrong, Desanay #> 7                Awtrey, Jason #> 8              Baker, Danielle #> 9                Barron, Kelly #> 10                Baxter, Ryan #> 11             Benally, J'Rita #> 12              Bostic, Alisha #> 13             Boucher, Samuel #> 14              Bouchon, Karis #> 15                  Brant, Jay #> 16     Bridges-Farrow, Chelsea #> 17               Brown, Cecily #> 18              Brown, Triayna #> 19                 Bui, Analie #> 20              Burback, Sarah #> 21  Caldera-Velazquez, Sabryna #> 22          Calhoun, Alexandra #> 23              Cave, Michelle #> 24                   Cha, Tran #> 25                Chau, Austin #> 26                 Cheng, Lucy #> 27             Clark, Francena #> 28             Coleman, Aerial #> 29         Cottonwood, Dandrew #> 30             Couch, Jonathan #> 31                  Cross, Jon #> 32               Curry, Jossie #> 33              Davis, Kheylen #> 34             Dumas, Gabriela #> 35               Duncan, Jonte #> 36                Dunn, Colton #> 37               Eberle, Zaeem #> 38            Eckert, Kristjan #> 39             Ehlers, Marnita #> 40                Ellis, Ciana #> 41             Elvove, Matthew #> 42                 Fang, Mason #> 43            Fernandez, Jesus #> 44           Fhuere, Alexandra #> 45              Findley, Leigh #> 46               Flores, David #> 47               Garcia, Fidel #> 48              Gilbert, Sonja #> 49                  Gip, Henry #> 50           Gooding, Benjamin #> 51            Grange, Danielle #> 52         Greenstein, Derrick #> 53            Griggs, Mercedes #> 54                Halling, Amy #> 55           Hamilton, Vanessa #> 56                Hand, Dallas #> 57                  Hang, Lily #> 58                  Hassan, Au #> 59            Hector, Kristjan #> 60          Henderson, Melissa #> 61              Hickey, Garret #> 62              Hickey, Jordan #> 63              Hoang, Katelyn #> 64              Hocking, Kevin #> 65                 Hypio, Alec #> 66                 Ivey, Raven #> 67              John, Brittany #> 68              Johnson, James #> 69                Jones, Ariel #> 70            Jones, Te'Keisha #> 71             Karr, Katherine #> 72               Kazee, Amanda #> 73              Kim, Chuan-Kun #> 74              Kincaid, Ariel #> 75                  King, Zeid #> 76               Kramer, James #> 77     Lalau-Hitchcock, Diksha #> 78             Landin, Yahaira #> 79                 Leo, Samuel #> 80          Likianos, Sylvanus #> 81              Lopez, Zhiyuan #> 82        Lopez-Serda, Octavio #> 83              Lovan, Timothy #> 84           Lovato, Francisco #> 85             Lovejoy, Othell #> 86           Madison, Shakedia #> 87            Manzanares, Alex #> 88              Marquez, Edgar #> 89             Martinez, Sarah #> 90            Mccluskey, Ilysh #> 91           Mccormick, Jeremy #> 92          Mcroy, Charneissha #> 93           Mcwilliams, Royal #> 94             Melara, Jovanni #> 95              Mergia, Jalond #> 96          Miramontes, Jonnie #> 97             Montoya, Moriah #> 98                 Nalla, Adam #> 99           Nelson, Alexander #> 100              Nossem, Kayla #> 101      Padilla-Chavez, Bryan #> 102         Paner, Christopher #> 103           Pettway, Caitlin #> 104        Piechowski, Kathryn #> 105              Pierce, Henry #> 106           Prosser, Camille #> 107                 Qu, Austin #> 108            Quintana, Jason #> 109              Ramirez, Joel #> 110              Ramos, Daniel #> 111           Reffel, Danielle #> 112               Riley, Jorge #> 113              Robles, Brian #> 114              Rocha, Chance #> 115          Rodriguez, Issiah #> 116       Rose-Williams, Javon #> 117          Sandoval, Antonio #> 118           Schippers, Mario #> 119            Schmalz, Taylor #> 120               Scott, Kevin #> 121           Serrato, Gabriel #> 122            Simmons, Danita #> 123           Sloan, Kehaulani #> 124            Smith, Courtney #> 125             Sotam, Vanessa #> 126             Soto, Salvador #> 127             Steele, Kendra #> 128          Strecker, Jessica #> 129             Taherkhani, Vu #> 130 Terriquez Rendon, Samantha #> 131               Thach, Caleb #> 132            Thompson, Isaac #> 133           Thortvedt, Kevin #> 134               Torres, Adam #> 135          Trujillo, Matthew #> 136              Varney, Jayla #> 137             Villegas, Iris #> 138              Wako, Steffen #> 139           Werkele, Leilani #> 140             Wiens, Melanie #> 141             Williams, Ross #> 142            Wright, Jazminn #> 143              Xiong, Joseph #> 144                   Yu, Jing #> 145          al-Abdul, Mamdooh #> 146            al-Agha, Kaarim #> 147         al-Ahmadi, Ibrahim #> 148           al-Gad, Fikriyya #> 149   al-Hussein, Abdul Waahid #> 150         al-Idris, Musheera #> 151           al-Iman, Tahiyya #> 152           al-Jabbar, Ameen #> 153           al-Kazi, Haashid #> 154         al-Khawaja, Faadil #> 155          al-Mirza, Mahmood #> 156           al-Saad, Najeema #> 157          al-Salek, Manaara #> 158        al-Shaikh, Manaahil #> 159        al-Siddiqi, Maisoon #> 160      al-Suleiman, Nazmiyya #> 161          el-Abood, Tameema #> 162            el-Ahmad, Fahmi #> 163           el-Akhtar, Suhaa #> 164          el-Ayoub, Muneefa #> 165             el-Begum, Sahl #> 166          el-Jaber, Sitaara #> 167           el-Kanan, Mufeed #> 168            el-Naim, Naaifa #> 169           el-Nassif, Safwa #> 170        el-Saah, Badruddeen #> 171           el-Salman, Fuaad #> 172         el-Sesay, Shaamila #> 173         el-Shaker, Fakeeha #> 174      el-Tabatabai, Hibbaan #> 175     el-Zaher, Kamaaluddeen"},{"path":"/reference/ol_comp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Overload Compensation for One Instructor — ol_comp","title":"Calculate Overload Compensation for One Instructor — ol_comp","text":"Computes prorated overload pay qualified credit hours single instructor based course credit hours, enrollment, institutional overload rules.","code":""},{"path":"/reference/ol_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Overload Compensation for One Instructor — ol_comp","text":"","code":"ol_comp(instructor_schedule, L = 4, U = 9, rate_per_cr = 2500/3, reg_load = 12)"},{"path":"/reference/ol_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Overload Compensation for One Instructor — ol_comp","text":"instructor_schedule data frame instructor's courses, columns INSTRUCTOR, ENRLD, HRS. L Lower enrollment threshold overload pay qualification (default = 4). U Upper limit proration; courses ENRLD > U get full-rate pay (default = 9). rate_per_cr Base overload pay per credit hour (default = 2500/3). reg_load Regular teaching load credit hours (default = 12).","code":""},{"path":"/reference/ol_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Overload Compensation for One Instructor — ol_comp","text":"tibble course-level compensation summary block, matching ol_comp_summary() format.","code":""},{"path":"/reference/ol_comp_byindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Overload Compensation for One Instructor (by Index) — ol_comp_byindex","title":"Calculate Overload Compensation for One Instructor (by Index) — ol_comp_byindex","text":"Retrieves instructor's name index schedule calculates overload compensation using ol_comp(). Returns clean, readable summary consistent package output.","code":""},{"path":"/reference/ol_comp_byindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Overload Compensation for One Instructor (by Index) — ol_comp_byindex","text":"","code":"ol_comp_byindex(   i,   schedule_df,   L = 4,   U = 9,   rate_per_cr = 2500/3,   reg_load = 12 )"},{"path":"/reference/ol_comp_byindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Overload Compensation for One Instructor (by Index) — ol_comp_byindex","text":"Integer index instructor (returned get_unique_instructors()). schedule_df data frame full course schedule containing INSTRUCTOR column. L Lower enrollment threshold overload eligibility (inclusive). Default 4. U Upper enrollment limit proration (inclusive). Default 9. rate_per_cr Overload pay rate per credit hour. Default 2500/3. reg_load Regular teaching load credit hours. Default 12.","code":""},{"path":"/reference/ol_comp_byindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Overload Compensation for One Instructor (by Index) — ol_comp_byindex","text":"Invisibly returns tibble instructor’s overload compensation summary.","code":""},{"path":"/reference/ol_comp_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Overload Compensation — ol_comp_summary","title":"Summarize Overload Compensation — ol_comp_summary","text":"Calculates overload compensation instructor based institutional policy. output includes course-level payments, qualified credit hours, readable instructor-level summary block follows instructor's courses.","code":""},{"path":"/reference/ol_comp_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Overload Compensation — ol_comp_summary","text":"","code":"ol_comp_summary(   schedule_df,   instructor = NULL,   L = 4,   U = 9,   rate_per_cr = 2500/3,   reg_load = 12 )"},{"path":"/reference/ol_comp_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Overload Compensation — ol_comp_summary","text":"schedule_df data frame containing course schedule information. Must include columns INSTRUCTOR, HRS, ENRLD. instructor Optional string. provided, limits summary single instructor. Default NULL (includes instructors). L Minimum enrollment required overload pay eligibility. Default 4. U Upper threshold proration. Courses ENRLD > U receive full-rate pay. Default 9. rate_per_cr Overload pay rate per credit hour. Default 2500/3. reg_load Regular teaching load credit hours. Default 12.","code":""},{"path":"/reference/ol_comp_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Overload Compensation — ol_comp_summary","text":"tibble combining course-level compensation summary section instructor.","code":""},{"path":"/reference/schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Schedule Dataset — schedule","title":"Sample Schedule Dataset — schedule","text":"dataset represents sample class schedule used several institutions, slight variations variable names. Users must ensure key variables—HRS, ENRLD, INSTRUCTOR—properly named formatted functions package work correctly.","code":""},{"path":"/reference/schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Schedule Dataset — schedule","text":"","code":"schedule"},{"path":"/reference/schedule.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Schedule Dataset — schedule","text":"object class data.frame 665 rows 15 columns.","code":""},{"path":"/reference/schedule.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample Schedule Dataset — schedule","text":"Included package data/schedule.rda","code":""},{"path":"/reference/schedule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Schedule Dataset — schedule","text":"dataset containing instructor schedules overload analysis. dataset 665 rows 15 columns, including: HRS Credit hours course. ENRLD Number students enrolled course. INSTRUCTOR Name instructor teaching course (anonymized).","code":""},{"path":"/news/index.html","id":"catool-100","dir":"Changelog","previous_headings":"","what":"catool 1.0.0","title":"catool 1.0.0","text":"Initial release catool (Compensation Analysis Tool) package.","code":""},{"path":"/news/index.html","id":"sparkles-features-1-0-0","dir":"Changelog","previous_headings":"","what":"✨ Features","title":"catool 1.0.0","text":"Calculates overload compensation based institutional policies enrollment thresholds Implements proration logic courses low enrollment (default: 4–9 students) Identifies qualified credit hours regular teaching load (default: 12 hours) Returns detailed, instructor-level summary blocks total compensation Supports batch summaries across instructors Allows filtering subject, instructor, division Provides readable, export-ready tibbles reporting Includes comprehensive vignette (catool-walkthrough) explaining methodology examples","code":""},{"path":"/news/index.html","id":"package-infrastructure-1-0-0","dir":"Changelog","previous_headings":"","what":"📦 Infrastructure","title":"catool 1.0.0","text":"Fully documented roxygen2 includes runnable examples Tested Windows, Ubuntu, Fedora, macOS Includes unit tests (via testthat) GitHub Actions continuous integration Licensed AGPL-3","code":""}]
